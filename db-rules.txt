rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow get: if request.auth.uid == userId;
      allow list: if request.auth.token.name == 'a';
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid != null;
      allow delete: if request.auth.token.name == 'a';
    }
    match /products/{id} {
    	allow read, create, delete: if request.auth.token.name == 'a';
      allow update: if request.auth.uid != null;
    }
    match /packs/{id} {
    	allow read;
      allow update: if request.auth.uid != null;
      allow create, delete: if request.auth.token.name == 'a';
    }
    match /stores/{id} {
    	allow read, update: if request.auth.uid != 'null';
      allow create, delete: if request.auth.token.name == 'a';
    }
    match /lookups/{id} {
    	allow read;
      allow write: if request.auth.token.name == 'a';
    }
    match /categories/{id} {
    	allow read;
    	allow write: if request.auth.token.name == 'a';
    }
    match /password-requests/{id} {
    	allow read, write;
    }
    match /logs/{id} {
    	allow read: if request.auth.token.name == 'a';
      allow create: if request.auth.uid != null;
      allow update, delete: if request.auth.token.name == 'a';
    }
     match /adverts/{id} {
    	allow read;
      allow write: if request.auth.token.name == 'a';
    }
  }
}

-----
service firebase.storage {
  match /b/{bucket}/o {
    match /requests/{id} {
			allow read, write, delete: if request.auth.uid != null
    }
    match /{allPaths=**} {
      allow read;
      allow write, delete: if request.auth.token.name == 'a';
    }
  }
}
